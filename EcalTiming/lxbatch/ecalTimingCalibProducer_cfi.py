import FWCore.ParameterSet.Config as cms

timing = cms.EDFilter("EcalTimingCalibProducer",
                    isSplash = cms.bool(False),
                    makeEventPlots = cms.bool(False),
                    applyAmpThresEB = cms.bool(True),
                    applyAmpThresEE = cms.bool(True),
                    ebUncalibRechits = cms.InputTag("ecalMultiFitUncalibRecHit","EcalUncalibRecHitsEB"),
                    eeUncalibRechits = cms.InputTag("ecalMultiFitUncalibRecHit","EcalUncalibRecHitsEE"),
                    timingCollection = cms.InputTag("EcalTimingEvents"),
                    recHitMinimumN = cms.uint32(2),
                    minRecHitEnergyStep = cms.double(0.5),
                    minRecHitEnergyNStep = cms.double(10),
                    energyThresholdOffsetEE = cms.double(0.0),
                    energyThresholdOffsetEB = cms.double(0.0),
                    ampFrac = cms.double(5.),
                    ampCut_barrelP = cms.vdouble(20.31759, 20.333550000000002, 20.34853, 20.36281, 20.37667, 20.39011, 20.40334, 20.41657, 20.429940000000002, 20.44359, 20.45759, 20.47222, 20.487479999999998, 20.50358, 20.520519999999998, 20.53844, 20.55755, 20.57778, 20.599339999999998, 20.62216, 20.64645, 20.67221, 20.69951, 20.72849, 20.758940000000003, 20.79121, 20.825020000000002, 20.86058, 20.897959999999998, 20.93695, 20.97783, 21.02025, 21.06442, 21.11041, 21.15787, 21.20708, 21.25783, 21.31026, 21.36409, 21.41932, 21.47602, 21.53384, 21.5932, 21.65347, 21.715, 21.77744, 21.84086, 21.90505, 21.97001, 22.03539, 22.10147, 22.16783, 22.23454, 22.30146, 22.36824, 22.43502, 22.50159, 22.56781, 22.63354, 22.69857, 22.76297, 22.82625, 22.88862, 22.94973, 23.00951, 23.06761, 23.12403, 23.1787, 23.23127, 23.28167, 23.32955, 23.37491, 23.41754, 23.45723, 23.49363, 23.52688, 23.55642, 23.58218, 23.60416, 23.62166, 23.63468, 23.64315, 23.64665, 23.6449, 23.6379),
                    ampCut_barrelM = cms.vdouble(20.31759, 20.333550000000002, 20.34853, 20.36281, 20.37667, 20.39011, 20.40334, 20.41657, 20.429940000000002, 20.44359, 20.45759, 20.47222, 20.487479999999998, 20.50358, 20.520519999999998, 20.53844, 20.55755, 20.57778, 20.599339999999998, 20.62216, 20.64645, 20.67221, 20.69951, 20.72849, 20.758940000000003, 20.79121, 20.825020000000002, 20.86058, 20.897959999999998, 20.93695, 20.97783, 21.02025, 21.06442, 21.11041, 21.15787, 21.20708, 21.25783, 21.31026, 21.36409, 21.41932, 21.47602, 21.53384, 21.5932, 21.65347, 21.715, 21.77744, 21.84086, 21.90505, 21.97001, 22.03539, 22.10147, 22.16783, 22.23454, 22.30146, 22.36824, 22.43502, 22.50159, 22.56781, 22.63354, 22.69857, 22.76297, 22.82625, 22.88862, 22.94973, 23.00951, 23.06761, 23.12403, 23.1787, 23.23127, 23.28167, 23.32955, 23.37491, 23.41754, 23.45723, 23.49363, 23.52688, 23.55642, 23.58218, 23.60416, 23.62166, 23.63468, 23.64315, 23.64665, 23.6449, 23.6379),
                    ampCut_endcapP = cms.vdouble(20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0),
                    ampCut_endcapM = cms.vdouble(20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0),
                    eThresholdsEB = cms.vdouble(
        1.00751, 1.01408, 1.01886, 1.02209, 1.02395, 1.02462, 1.02426, 1.02301, 1.02099, 1.01832,
        1.01508, 1.01139, 1.00731, 1.00292, 0.998285, 0.993462, 0.988504, 0.983455, 0.978355, 0.973239,
        0.968136, 0.963071, 0.958066, 0.953138, 0.948299, 0.943562, 0.938933, 0.934416, 0.930016, 0.925731,
        0.92156, 0.917501, 0.913549, 0.909699, 0.905944, 0.902278, 0.898694, 0.895184, 0.89174, 0.888355,
        0.885023, 0.881736, 0.878489, 0.875276, 0.872093, 0.868936, 0.865802, 0.862691, 0.859601, 0.856534,
        0.853489, 0.850472, 0.847485, 0.844534, 0.841625, 0.838765, 0.835961, 0.833224, 0.830561, 0.827984,
        0.825503, 0.823129, 0.820872, 0.818743, 0.816752, 0.814909, 0.813222, 0.811699, 0.810346, 0.809167,
        0.808164, 0.807336, 0.80668, 0.806189, 0.805852, 0.805656, 0.805582, 0.805606, 0.8057, 0.805828,
        0.805952, 0.806024, 0.80599, 0.805788, 0.805348, 0.805309, 0.80571, 0.805873, 0.805868, 0.805758,
        0.805595, 0.805427, 0.805295, 0.805232, 0.805267, 0.805424, 0.805722, 0.806174, 0.806791, 0.80758,
        0.808543, 0.809683, 0.810995, 0.812478, 0.814124, 0.815926, 0.817876, 0.819964, 0.822179, 0.824511,
        0.82695, 0.829484, 0.832104, 0.834798, 0.837558, 0.840375, 0.84324, 0.846146, 0.849088, 0.852061,
        0.85506, 0.858082, 0.861126, 0.864191, 0.867278, 0.870389, 0.873525, 0.876691, 0.879891, 0.88313,
        0.886414, 0.889751, 0.893146, 0.896607, 0.900142, 0.903758, 0.907462, 0.911262, 0.915162, 0.91917,
        0.923288, 0.92752, 0.931867, 0.936329, 0.940904, 0.945586, 0.950368, 0.95524, 0.960188, 0.965195,
        0.97024, 0.975298, 0.980339, 0.985329, 0.990229, 0.994993, 0.99957, 1.0039, 1.00792, 1.01156,
        1.01474, 1.01737, 1.01934, 1.02054, 1.02085, 1.02014, 1.01824, 1.01499, 1.01018, 1.00359        
                    ), 
                    parAThresholds_endcap = cms.vdouble(10, 0.945), # B + A*ring 2018 thr are defined as two linear cut (one for iring<30 and one above)
                    parBThresholds_endcap = cms.vdouble(150, -21.865),# B + A*ring 2018 thr are defined as two linear cut (one for iring<30 and one above)
                    minEntries = cms.uint32(1),
                    globalOffset = cms.double(0.),
                    storeEvents = cms.bool(False),
                    produceNewCalib = cms.bool(True),
                    outputDumpFile = cms.string('output.dat'),
                    maxSkewnessForDump = cms.double(2),
                    )
